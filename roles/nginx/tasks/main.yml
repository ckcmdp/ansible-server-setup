---
# tasks file for nginx

- name: ensure nginx is not installed
  apt:
    name: nginx
    state: absent

- name: ensure nginx is at the latest version
  apt:
    name: nginx
    state: latest

- name: start nginx
  service:
    name: nginx
    state: started

- name: Copy rails_app.conf file
  copy:
    src: files/rails_app.conf
    dest: /etc/nginx/rails_app.conf
    mode: 0644

- name: Copy restrictions.conf code
  copy:
    src: files/restrictions.conf
    dest: /etc/nginx/restrictions.conf
    mode: 0644

- name: create a configuration file with app name and put app specific config
  copy:
    dest: "/etc/nginx/sites-available/{{ item.app_name }}"
    mode: 0644
    content: |
      upstream app_{{ item.app_name }} {
        server unix:/var/deploy/{{ item.username }}/{{ item.app_name }}/shared/tmp/sockets/puma.sock fail_timeout=0;}

      server {
        listen {{ item.port }};
        server_name {{ item.app_name }}.com;

        root /var/deploy/{{ item.username }}/{{ item.app_name }}/current/public;
        try_files $uri/index.html $uri @app_{{ item.app_name }};

        location @app_{{ item.app_name }} {
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header Host $host;
          proxy_redirect off;
          proxy_http_version 1.1;
          proxy_set_header Connection '';
          proxy_pass http://app_{{ item.app_name }}; }

        access_log /var/deploy/{{ item.username }}/{{ item.app_name }}/current/log/nginx.access.log;
        error_log /var/deploy/{{ item.username }}/{{ item.app_name }}/current/log/nginx.error.log info;

        include /etc/nginx/rails_app.conf;
        include /etc/nginx/restrictions.conf; }
  with_items:
    - "{{ users }}"

- name: create symlink for {{ item.app_name }} nginx config
  file:
    src: /etc/nginx/sites-available/{{ item.app_name }}
    dest: /etc/nginx/sites-enabled/{{ item.app_name  }}
    state: link
  with_items:
    - "{{ users }}"

- name: remove default nginx configuration
  file:
    path: /etc/nginx/sites-available/default
    state: absent

- name: remove default nginx configuration
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

# - name: reload systemd config
#   systemd:
#     daemon_reload: yes

# - name: enable service nginx( start on boot)
#   systemd:
#     name: nginx
#     enabled: yes
#     masked: no

# - name: ensure nginx is restarted
#   systemd:
#     state: restarted
#     name: nginx

- name: restart nginx
  service:
    name: nginx
    state: restarted
